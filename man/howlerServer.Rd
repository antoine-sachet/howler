% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server-side.R
\name{howlerServer}
\alias{howlerServer}
\alias{changeHowlerTrack}
\alias{playHowler}
\alias{pauseHowler}
\alias{stopHowler}
\title{Update howler.js Server-Side}
\usage{
changeHowlerTrack(session, id, file)

playHowler(session, id)

pauseHowler(session, id)

stopHowler(session, id)
}
\arguments{
\item{session}{Shiny session}

\item{id}{ID of the \code{howlerPlayer} to update}

\item{file}{Base name of the file to change to. If the file is not included in the player nothing will happen.}
}
\value{
Updates the the state of the specified \code{howlerPlayer} in the shiny application.
}
\description{
Change the state of the howler player from the server.

\code{playHowler}, \code{pauseHowler} and \code{stopHowler} will all be applied to the current track.

\code{changeHowlerTrack} will update the track to the file specified. This file must be included when the player
is initialised, otherwise it won't change the track.
}
\examples{
if (interactive()) {
  library(shiny)

  tracks <- c("audio/track1.mp3", "audio/track2.mp3")

  ui <- fluidPage(
    title = "howler.js Player",
    useHowlerJS(),
    selectInput("track", "Select Track", basename(tracks)),
    howlerPlayer("howler", tracks),
    playPauseButton("howler")
  )

  server <- function(input, output) {
    observeEvent(input$track, changeHowlerTrack("howler", input$track))
  }

  runShiny(ui, server)
}

}
